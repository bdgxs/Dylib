name: Build, Package, and Release Tweak

on:
  push:
    branches:
      - main  # Change this to your main branch if different
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Theos
      run: |
        git clone --depth 1 https://github.com/theos/theos.git $HOME/theos
        echo "THEOS=$HOME/theos" >> $GITHUB_ENV
        echo "$HOME/theos/bin:$PATH" >> $GITHUB_PATH
        echo "THEOS_MAKE_PATH=$HOME/theos/makefiles" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt-get update || { echo "Failed to update package list"; exit 1; }
        sudo apt-get install -y dpkg fakeroot || { echo "Packages are already up-to-date or another error occurred"; exit 0; }
        sudo apt-get clean
        # Install ldid
        wget -qO- https://github.com/ProcursusTeam/ldid/releases/download/v2.1.5-procursus7/ldid_iphoneos-arm64 > ldid || { echo "Failed to download ldid"; exit 1; }
        sudo install -m 755 ldid /usr/local/bin/ldid || { echo "Failed to install ldid"; exit 1; }
        # Verify ldid installation
        if ! command -v ldid > /dev/null; then echo "ldid installation failed"; exit 1; fi

    - name: Verify dependencies installation
      run: |
        dpkg --version || { echo "Failed to verify dpkg"; exit 1; }
        fakeroot --version || { echo "Failed to verify fakeroot"; exit 1; }
        ldid -h || { echo "Failed to verify ldid"; exit 1; }

    - name: Build tweak
      run: |
        make package FINALPACKAGE=1 || { echo "Build failed"; exit 1; }

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}-${{ github.sha }}
        release_name: Release v${{ github.run_number }}-${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload Package to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.workspace }}/packages/*.deb
        asset_name: cpuinfooverlay_${{ github.run_number }}.deb
        asset_content_type: application/octet-stream